spack:
  concretizer:
    unify: true

  config:
    checksum: false
    build_jobs: 2
    connect_timeout: 60

  compilers:
  - compiler:
      spec: intel@2021.10.0
      paths:
        cc: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/intel64/icc
        cxx: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/intel64/icpc
        f77: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/intel64/ifort
        fc: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/intel64/ifort
      flags: {}
      operating_system: ubuntu24.04
      modules: []
      environment:
        prepend_path:
          PATH: /usr/bin
          LD_LIBRARY_PATH: /opt/intel/oneapi/compiler/2023.2.3/linux/compiler/lib/intel64_lin
          CPATH: /usr/include
      extra_rpaths: []
  - compiler:
      spec: gcc@=11.4.0
      paths:
        cc: /usr/bin/gcc
        cxx: /usr/bin/g++
        f77: /usr/bin/gfortran
        fc: /usr/bin/gfortran
      flags: {}
      operating_system: ubuntu24.04
      target: x86_64
      modules: []
      environment: {}
      extra_rpaths: []
  - compiler:
      spec: oneapi@=2023.2.3
      paths:
        cc: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/icx
        cxx: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/icpx
        f77: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/ifx
        fc: /opt/intel/oneapi/compiler/2023.2.3/linux/bin/ifx
      flags: {}
      operating_system: ubuntu24.04
      target: x86_64
      modules: []
      environment: {}
      extra_rpaths: []

  # Basic package config from configs/common/packages.yaml
  # Additional package config for container
  packages:
    all:
      require: '%intel'
      target: [core2]
      compiler: [intel@2021.10.0, gcc@11.4.0]
      providers:
        mpi: [intel-oneapi-mpi@2021.10.0]
    autoconf:
      externals:
      - spec: autoconf@2.71
        prefix: /usr
    automake:
      externals:
      - spec: automake@1.16.5
        prefix: /usr
    binutils:
      externals:
      - spec: binutils@2.38
        prefix: /usr
    boost:
      require:
      - '%gcc'
    coreutils:
      externals:
      - spec: coreutils@8.32
        prefix: /usr
    diffutils:
      buildable: false
      externals:
      - spec: diffutils@3.8
        prefix: /usr
    ecflow:
      require:
      - '%gcc'
    findutils:
      externals:
      - spec: findutils@4.8.0
        prefix: /usr
    flex:
      externals:
      - spec: flex@2.6.4+lex
        prefix: /usr
    gawk:
      externals:
      - spec: gawk@5.1.0
        prefix: /usr
    git:
      buildable: false
      externals:
      - spec: git@2.34.1~tcltk
        prefix: /usr
    git-lfs:
      buildable: false
      externals:
      - spec: git-lfs@3.0.2
        prefix: /usr
    gmake:
      externals:
      - spec: gmake@4.3
        prefix: /usr
    groff:
      externals:
      - spec: groff@1.22.4
        prefix: /usr
    gsibec:
      require::
      - '@1.2.1 ~mkl'
    intel-oneapi-mkl:
      buildable: false
      externals:
      - spec: intel-oneapi-mkl@2023.2.0
        prefix: /opt/intel/oneapi
    intel-oneapi-mpi:
      buildable: false
      externals:
      # This spec is required in order set paths allowing execution of mpiicx.
      - spec: intel-oneapi-mpi@2021.10.0%intel@2021.10.0 +classic-names
        prefix: /opt/intel/oneapi
    intel-oneapi-tbb:
      buildable: false
      externals:
      - spec: intel-oneapi-tbb@2021.10.0
        prefix: /opt/intel/oneapi
    libtool:
      externals:
      - spec: libtool@2.4.6
        prefix: /usr
    mpi:
      buildable: False
    m4:
      externals:
      - spec: m4@1.4.18
        prefix: /usr
    lcms:
      externals:
      - spec: lcms@2.13.1
        prefix: /usr
    llvm:
      buildable: false
      externals:
      - spec: llvm@14.0.6
    grep:
      buildable: false
      externals:
      - spec: grep@3.7
        prefix: /usr
    mysql:
      buildable: false
      externals:
      - spec: mysql@8.0.40
        prefix: /usr
    pixman:
      require:
      - '%gcc'
    perl:
      externals:
      - spec: perl@5.34.0~cpanm+opcode+open+shared+threads
        prefix: /usr
    pkg-config:
      externals:
      - spec: pkg-config@0.29.2
        prefix: /usr
    py-pynacl:
      buildable: false
      externals:
      - spec: py-pynacl@1.5.0
        prefix: /usr
    py-numpy:
      require:
      - '^intel-oneapi-mkl'
    # Turn off crypt, because libxcrypt doesn't
    # build with Intel.
    python:
      variants: ~crypt
    qt:
      buildable: false
      externals:
      - spec: qt@5.15.3
        prefix: /usr
      version: [5.15.3]
    sed:
      externals:
      - spec: sed@4.8
        prefix: /usr
    tar:
      externals:
      - spec: tar@1.34
        prefix: /usr
    wget:
      buildable: false
      externals:
      - spec: wget@1.21.2
        prefix: /usr
    gettext:
      externals:
      - spec: gettext@0.21
        prefix: /usr

  specs: []

  container:

    # Select the format of the recipe e.g. docker,
    # singularity or anything else that is currently supported
    format: docker
    # How to use:
    #$ spack containerize > Dockerfile
    #$ sudo docker build -t myimage .
    #$ sudo docker run -it myimage

    #format: singularity
    # How to use:
    #$ spack containerize > singularity.def
    #$ sudo singularity build singularity.sif singularity.def

    # Sets the base images for the stages where Spack builds the
    # software or where the software gets installed after being built..
    images:
      os: ubuntu:24.04
      spack:
        url: https://github.com/jcsda/spack
        ref: spack-stack-dev
        resolve_sha: true

    # Whether or not to strip binaries
    strip: false

    ## Additional system packages that are needed at runtime
    os_packages:
      build:
      - autoconf
      - automake
      - autopoint
      - bc
      - cpp-11
      - cmake
      - flex
      - g++-11
      - gcc-11
      - gettext
      - gfortran-11
      - git
      - git-lfs
      - gpg
      - libgomp1
      - llvm-14
      - mysql-server
      - pkg-config
      - qtbase5-dev
      - qt5-qmake
      - libqt5svg5-dev
      - qt5dxcb-plugin
      - libcurl4-openssl-dev
      - wget

      final:
      - autopoint
      - bc
      - cpp-11
      - g++-11
      - gcc-11
      - gettext
      - gfortran-11
      - git
      - git-lfs
      - gpg
      - libgomp1
      - llvm-14
      - make
      - mysql-server
      - pkg-config
      - qtbase5-dev
      - qt5-qmake
      - libqt5svg5-dev
      - qt5dxcb-plugin
      - libcurl4-openssl-dev
      - wget
      # Implicitly included in build step
      - build-essential
      - ca-certificates
      - curl
      - file
      - gnupg2
      - iproute2
      - locales
      - python3
      - python3-pip
      - python3-setuptools
      - unzip
      - vim
      - nano
      - less

    # Extra instructions
    extra_instructions:
      pre_build: |
        # Copy the spack-stack extension repo into the spack code
        COPY spack-ext-SPACK_STACK_HASH/repos/spack-stack $SPACK_ROOT/var/spack/repos/spack-stack
        # Register spack-stack extension repo
        RUN spack repo add $SPACK_ROOT/var/spack/repos/spack-stack --scope defaults
        # Install Intel compilers and MPI library
        RUN apt update && apt install apt-utils && \
        wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null && \
        echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list && \
        apt update && \
        apt install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic-2023.2.3 intel-oneapi-compiler-fortran-2023.2.3 intel-oneapi-mkl-devel-2023.2.0 intel-oneapi-mpi-devel-2021.10.0 -y && \
        update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100 && \
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 && \
        update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-11 100 && \
        rm /usr/bin/cpp && ln -s /usr/bin/cpp-11 /usr/bin/cpp && \
        # Needed by py-llvmlite
        update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-14 100 && \
        rm -rf /var/lib/apt/lists/*
      pre_final: |
        # Set environment variables for installing tzdata
        ENV DEBIAN_FRONTEND=noninteractive
        ENV TZ=Etc/UTC
        ENV CC=icc
        ENV CXX=icpc
        ENV FC=ifort
      build: |
        # Put output of spack find into a file
        RUN cd /opt/spack-environment && \
        spack env activate -d . && \
        spack find 2>&1 | tee /root/spack_find.out
      final: |
        # Install Intel compilers and MPI library and pynacl
        RUN apt update  && apt install apt-utils && \
        wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null && \
        echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list && \
        apt update && \
        apt install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic-2023.2.3 intel-oneapi-compiler-fortran-2023.2.3 intel-oneapi-mkl-devel-2023.2.0 intel-oneapi-mpi-devel-2021.10.0 -y && \
        update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100 && \
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 && \
        update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-11 100 && \
        rm /usr/bin/cpp && ln -s /usr/bin/cpp-11 /usr/bin/cpp && \
        # Needed by py-llvmlite
        update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-14 100 && \
        rm -rf /var/lib/apt/lists/* && \
        /opt/views/view/bin/pip3 install pynacl
        # Copy spack find output from builder
        COPY --from=builder /root/spack_find.out /root/spack_find.out
        # Make a non-root user:nonroot / group:nonroot for running MPI
        RUN useradd -U -k /etc/skel -s /bin/bash -d /home/nonroot -m nonroot --uid 43891 && \
        echo "ulimit -s unlimited" >> /home/nonroot/.bashrc && \
        echo "ulimit -v unlimited" >> /home/nonroot/.bashrc && \
        echo "export CC=icc" >> /home/nonroot/.bashrc && \
        echo "export CXX=icpc" >> /home/nonroot/.bashrc && \
        echo "export FC=ifort" >> /home/nonroot/.bashrc && \
        echo "source /opt/intel/oneapi/setvars.sh" >> /etc/bash.bashrc && \
        printf "[credential]\n    helper = cache --timeout=7200\n" >> /home/nonroot/.gitconfig && \
        chown -R nonroot:nonroot /home/nonroot/.gitconfig
        # Replicate settings for root user
        RUN echo "ulimit -s unlimited" >> /root/.bashrc && \
        echo "ulimit -v unlimited" >> /root/.bashrc && \
        echo "export CC=icc" >> /root/.bashrc && \
        echo "export CXX=icpc" >> /root/.bashrc && \
        echo "export FC=ifort" >> /root/.bashrc && \
        echo "export jedi_cmake_ROOT=$(ls -d /opt/software/linux-ubuntu*/intel-*/jedi-cmake-*)" >> /root/.bashrc && \
        printf "[credential]\n    helper = cache --timeout=7200\n" >> /root/.gitconfig

    # Labels for the image
    labels:
      app: ""
      mpi: "intel-oneapi-mpi"
