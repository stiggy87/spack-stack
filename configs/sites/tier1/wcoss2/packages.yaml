  packages:
    #
    ### Set compiler.
    #
    all:
      prefer: ['%intel@19.1.3.304']
      compiler:: [intel@19.1.3.304]
      providers:
        mpi: [cray-mpich]
    #
    ### Strictly set virtual package providers.
    #
    mpi:
      buildable: False
      require: cray-mpich
    fftw-api:
      require: fftw
    blas:
      require: openblas
    lapack:
      require: openblas
    jpeg:
      require: libjpeg-turbo
    #
    ### External packages.
    #
    cray-mpich:
      externals:
      - spec: cray-mpich@8.1.9~wrappers
        modules:
        - libfabric
        - craype-network-ofi
        - cray-mpich/8.1.9
    #
    ### Individual package settings.
    # Use `require::` to override require's from {common,site}/packages.yaml,
    # and `require:<newline>  - '...'` to add to existing ones.
    #
    boost:
      require::
      - '@1.84 ~atomic +chrono +date_time +exception +filesystem ~graph ~iostreams
        ~locale ~log ~math ~mpi ~numpy +pic +program_options +python ~random +regex
        +serialization ~signals +system +test +thread +timer ~wave visibility=hidden cxxstd=17'
    cdo:
      require:
      - 'grib2=none'   # avoids eccodes/grib-api dependency
      - '%intel'
      - any_of: ["@2.2.2"]
        when: "%intel@2022.0.2.262"
        message: "2.3.0 is the last version to use C++17"
      - any_of: ["@2.0.5"]
        when: "%intel@19.1.3.304"
        message: "2.0.5 is the last version to use C++14"
    curl:
      require:
      - ~nghttp2   # avoid nghttp2 dependency
    eccodes:
      require:
      - any_of: ["@2.25.0"]
        when: "%intel@19.1.3.304"
        message: "2.25.0 is the last version to use C++11 (as opposed to C++17)"
    ecmwf-atlas:
      'require:':
      - +fckit ~trans ~fftw   # disabling trans and fftw to minimize dependencies; older version because newer eckit doesn't build with intel@19
      - any_of: ['@:0.39']
        when: '%intel@19.1.3.304'
    ectrans:
      require::
      - '@1.2.0 ~mkl +fftw'
    esmf:
      require:
      - snapshot=none   # make sure spack-stack doesn't accidentally give us a beta snapshot
      - '~python'
    flex:
      require: '@2.6.4'
    gcc-runtime:
      require: '%gcc'
    gdal:
      variants: ~curl
    gettext:
      version: ['0.19.7']
    git-lfs:
      require: '%gcc'
    glib:
      require:
      - any_of: ['@:2.74.3']
        when: '%intel@:19'
    gsibec:
      require::
      - '@1.2.1 ~mkl'
    harfbuzz:
      require: '%gcc'
    libffi:
      require: '@3.3'
    libunistring:
      require: '@:1.0'
    mapl:
      require:
      - ~pflogger ~fargparse ~extdata2g #   minimize dependencies
    netcdf-c:
      'require:': +mpi ~parallel-netcdf ~dap ~blosc ~szip build_system=autotools # disabling dap prevents network access; disabling blosc and szip reduces dependencies
    patchelf:
      version: ['0.13.1']
    py-cython::
      require: '@0.29.36'
    py-numpy:
      require::
      - '^[virtuals=lapack,blas] openblas'
      - '@:1.25'
      - any_of: ['@:1.24']
        when: '%intel@:19'
    py-pandas:
      'require:': ~excel #   minimize dependencies
    py-scipy:
      require:
      - any_of: ["@1.10.1"]
        when: '%intel@:19'
    py-setuptools:
      require: '@63.4.3' #   avoid duplicate build deps
    rhash:
      version: ['1.3.5']
    subversion:
      require:
      - ~serf +pic #   avoid serf dependency
